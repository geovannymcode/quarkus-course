{
  "info": {
    "name": "Bookmarker API – Quarkus",
    "_postman_id": "e9814156-f37e-4706-a49b-9ede4a72d202",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": "Colección de Postman para probar la API Bookmarker (Quarkus). Incluye Health y CRUD de Bookmarks con ejemplos y tests básicos."
  },
  "item": [
    {
      "name": "Health",
      "item": [
        {
          "name": "GET /api/health",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/health",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "health"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 200', function () { pm.response.to.have.status(200); });",
                  "pm.test('Tiene campos name/version/status', function () {",
                  "  const body = pm.response.json();",
                  "  pm.expect(body).to.have.property('name');",
                  "  pm.expect(body).to.have.property('version');",
                  "  pm.expect(body).to.have.property('status');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Bookmarks",
      "item": [
        {
          "name": "GET /api/bookmarks/all",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/bookmarks/all",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "bookmarks",
                "all"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 200', function () { pm.response.to.have.status(200); });",
                  "pm.test('Respuesta es array', function () {",
                  "  pm.response.to.be.json;",
                  "  const data = pm.response.json();",
                  "  pm.expect(Array.isArray(data)).to.eql(true);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "GET /api/bookmarks?page={{page}}",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/bookmarks?page={{page}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "bookmarks"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "{{page}}"
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 200', function () { pm.response.to.have.status(200); });",
                  "pm.test('Tiene paginación', function () {",
                  "  const body = pm.response.json();",
                  "  pm.expect(body).to.have.property('data');",
                  "  pm.expect(body).to.have.property('currentPageNo');",
                  "  pm.expect(body).to.have.property('totalPages');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "GET /api/bookmarks/:id",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/bookmarks/{{bookmarkId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "bookmarks",
                "{{bookmarkId}}"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 200', function () { pm.response.to.have.status(200); });",
                  "pm.test('Tiene campos básicos', function () {",
                  "  const b = pm.response.json();",
                  "  pm.expect(b).to.have.property('id');",
                  "  pm.expect(b).to.have.property('title');",
                  "  pm.expect(b).to.have.property('url');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "POST /api/bookmarks (create)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Quarkus Docs\",\n  \"url\": \"https://quarkus.io\",\n  \"description\": \"Sitio oficial de Quarkus\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/bookmarks",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "bookmarks"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 201', function () { pm.response.to.have.status(201); });",
                  "const created = pm.response.json();",
                  "pm.collectionVariables.set('createdBookmarkId', String(created.id));",
                  "pm.test('Se guardó el id como createdBookmarkId', function () {",
                  "  pm.expect(pm.collectionVariables.get('createdBookmarkId')).to.exist;",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "PUT /api/bookmarks/:id (update created)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Quarkus Docs (updated)\",\n  \"url\": \"https://quarkus.io\",\n  \"description\": \"Actualizado desde Postman\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/bookmarks/{{createdBookmarkId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "bookmarks",
                "{{createdBookmarkId}}"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 200', function () { pm.response.to.have.status(200); });",
                  "const b = pm.response.json();",
                  "pm.test('Título actualizado', function(){ pm.expect(b.title).to.eql('Quarkus Docs (updated)'); });"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "DELETE /api/bookmarks/:id (delete created)",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/bookmarks/{{createdBookmarkId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "bookmarks",
                "{{createdBookmarkId}}"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status 204', function () { pm.response.to.have.status(204); });"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8080"
    },
    {
      "key": "page",
      "value": "1"
    },
    {
      "key": "bookmarkId",
      "value": "1"
    },
    {
      "key": "createdBookmarkId",
      "value": ""
    }
  ]
}